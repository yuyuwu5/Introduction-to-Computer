class mainrole{

	field int x,y;
	field bomb bomb1;
	field memAddress memAddress;

	constructor mainrole new(int Ax,int Ay){
		let x=Ax;
		let y=Ay;
		do draw(y*32+(x/16));
		return this;
	}

	method void dispose(){
		do Memory.deAlloc(this);
		return;
	}
	method void draw(int location){
	    let memAddress = 16384+location;
	do Memory.poke(memAddress+0, -2);
	do Memory.poke(memAddress+32, -4);
	do Memory.poke(memAddress+64, -8);
	do Memory.poke(memAddress+96, 496);
	do Memory.poke(memAddress+128, 240);
	do Memory.poke(memAddress+160, -976);
	do Memory.poke(memAddress+192, 30768);
	do Memory.poke(memAddress+224, 48);
	do Memory.poke(memAddress+256, 12336);
	do Memory.poke(memAddress+288, 12336);
	do Memory.poke(memAddress+320, 944);
	do Memory.poke(memAddress+352, -31824);
	do Memory.poke(memAddress+384, -32720);
	do Memory.poke(memAddress+416, -7952);
	do Memory.poke(memAddress+448, 1920);
	do Memory.poke(memAddress+480, 3072);

	    let location = location+1;
	    let memAddress = 16384+location;
	    do Memory.poke(memAddress+0, 32767);
	do Memory.poke(memAddress+32, 16383);
	do Memory.poke(memAddress+64, 8191);
	do Memory.poke(memAddress+96, 3968);
	do Memory.poke(memAddress+128, 3840);
	do Memory.poke(memAddress+160, 3135);
	do Memory.poke(memAddress+192, 3102);
	do Memory.poke(memAddress+224, 3072);
	do Memory.poke(memAddress+256, 3084);
	do Memory.poke(memAddress+288, 3084);
	do Memory.poke(memAddress+320, 3520);
	do Memory.poke(memAddress+352, 3521);
	do Memory.poke(memAddress+384, 3073);
	do Memory.poke(memAddress+416, 3847);
	do Memory.poke(memAddress+448, 480);
	do Memory.poke(memAddress+480, 48);

	    let location = location-1;
	    let location =location+(32*16);
	    let memAddress = 16384+location;
	   do Memory.poke(memAddress+0, -2048);
	do Memory.poke(memAddress+32, -17408);
	do Memory.poke(memAddress+64, -29184);
	do Memory.poke(memAddress+96, -30208);
	do Memory.poke(memAddress+128, -30208);
	do Memory.poke(memAddress+160, 2560);
	do Memory.poke(memAddress+192, 512);
	do Memory.poke(memAddress+224, 512);
	do Memory.poke(memAddress+256, 1536);
	do Memory.poke(memAddress+288, -1024);
	do Memory.poke(memAddress+320, -1024);
	do Memory.poke(memAddress+352, -1024);
	do Memory.poke(memAddress+384, 31744);
	do Memory.poke(memAddress+416, 15360);
	do Memory.poke(memAddress+448, 15360);
	do Memory.poke(memAddress+480, 15360);

	    let location = location+1;
	    let memAddress = 16384+location;
	    do Memory.poke(memAddress+0, 31);
	do Memory.poke(memAddress+32, 61);
	do Memory.poke(memAddress+64, 113);
	do Memory.poke(memAddress+96, 81);
	do Memory.poke(memAddress+128, 81);
	do Memory.poke(memAddress+160, 80);
	do Memory.poke(memAddress+192, 64);
	do Memory.poke(memAddress+224, 64);
	do Memory.poke(memAddress+256, 96);
	do Memory.poke(memAddress+288, 63);
	do Memory.poke(memAddress+320, 63);
	do Memory.poke(memAddress+352, 63);
	do Memory.poke(memAddress+384, 62);
	do Memory.poke(memAddress+416, 60);
	do Memory.poke(memAddress+448, 60);
	do Memory.poke(memAddress+480, 60);
		return;
	}
	method void erase(){
	 do Screen.setColor(false);
	 do Screen.drawRectangle(x,y,x+32,y+32);
		
		return;
	}

	method void moveup(){
		if(y>33){
			do erase();
			let y=y-32;
			do draw(y*32+(x/16));
		}
		return;
	}
	method void movedown(){
		if(y<208){
			do erase();
			let y=y+32;
			do draw(y*32+(x/16));
		}
		return;
	}
	method void moveright(){
		if(x<464){
			do erase();
			let x=x+32;
			do draw(y*32+(x/16));
		}
		return;
	}
	method void moveleft(){
		if(x>33){
			do erase();
			let x=x-32;
			do draw(y*32+(x/16));
		}
		return;
	}
	method void putbomb(){
	    let bomb1 = bomb.new(x+16,y+16);
		do Sys.wait(1000);
        do bomb1.erase_side();
        do bomb1.explode();
        do bomb1.erase_side();
		return;
	}
}
